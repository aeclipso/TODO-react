let doRenderComp = () => {}let tasksProps = {    objData: [        // {id: 0, text: "text of the 1 task", title: "title of the task 1"},    ]}const getNextId = (propsObj) => {    return (propsObj.length + 1);}export let addTask = (textTask, dateTask, priorityTask) => {    let newTaskObj = {        id: getNextId(tasksProps.objData),        text: textTask,        title: "",        date: dateTask,        priority: priorityTask,    };    newTaskObj.title = `title of the task ${newTaskObj.id}`;    if (typeof (newTaskObj.date) === "string")        newTaskObj.date = Date();    if (newTaskObj.text === "")        newTaskObj.text = " - ";    tasksProps.objData.push(newTaskObj);    doRenderComp(tasksProps);}export let delTask = (idTask) => {    delete(tasksProps.objData[idTask - 1]);    doRenderComp(tasksProps);}export const subscribe = (observer) => {    doRenderComp = observer;}export default tasksProps;//TODO: 1) добавить возможность редактирования//TODO: 2) добавить возможность помечать задачу выполненой//TODO: 3) добавить возможность определять тип задачи (рабочая/личная) возможно убрать приоритет и добавить это//TODO: 4) добавить цветовое выделение задачи, чтобы знать какая задача скоро просрочится//TODO: 5) добавить сортировку по дате и типу//TODO: 6) сохранять задачи в localStorage