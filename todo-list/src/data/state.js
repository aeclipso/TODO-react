let doRenderComp = () => {}let tasksProps = {    objData: [        // {id: 0, text: "text of the 1 task", title: "title of the task 1"},    ]}const getNextId = (propsObj) => {    return (propsObj.length + 1);}export let addTask = (textTask) => {    let newTaskObj = {        id: getNextId(tasksProps.objData),        text: textTask,        title: "",        date: "",        priority: "",    };    // newTaskObj.id = getNextId(tasksProps.objData);    newTaskObj.title = `title of the task ${newTaskObj.id}`    tasksProps.objData.push(newTaskObj);    doRenderComp(tasksProps);}export let delTask = (idTask) => {    delete(tasksProps.objData[idTask - 1]);    doRenderComp(tasksProps);}export const subscribe = (observer) => {    doRenderComp = observer;}export default tasksProps;//TODO: написать функции, которые считывают не только текст, а так же и дату с приоритетом